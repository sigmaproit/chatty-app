{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://chatty-frontend/lib/chat-box/messaging.service.ts","ng://chatty-frontend/lib/chat-box/chat-box.component.ts","ng://chatty-frontend/lib/material-imports/material-imports.module.ts","ng://chatty-frontend/lib/messaging.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","MessagingService","http","injector","config","_this","totalUnReadMsgsCountSource","BehaviorSubject","totalUnReadMsgsCount","asObservable","unReadMsgsCountsArraySource","unReadMsgsCountsArray","unreadMsgsIdsPairs","isWebSocketReconnectingSource","isWebSocketReconnecting","defaultMsgArrivalCallback","message","stringify","sender_user_id","indexOf","id","push","incrementTotalUnReadMsgsCount","unReadPairsArray","getValue","matchedPairIndex","findIndex","el","count","next","console","log","configObject","authService","get","pushService","initialize","setTotalUnReadMsgsCount","newCount","setUnReadMsgsCountsArray","pairs","list","offset","customer_user_id","chatUrl","messages_url","messages_page_size","pipe","map","resp","results","send_message","content","ws","send","JSON","user_id","startLiveChat","onMessageCallback","initializeUnReadMessagesCounts","notificationCB","socketCB","event","parse","data","readyState","OPEN","setWebSocketCallbacks","initializeAutoReconnectingWebSocket","setNotificationCallback","onMessageCB","closeLiveChat","isAuthenticated","token","getToken","WebSocket","socket_url","onopen","onmessage","onclose","setTimeout","onerror","error","close","subscribe","countPairs","totalCount","forEach","pair","notification","additionalData","message_dict","removeOnMessageListener","readAll","readAllUrl","patch","tap","unreadLatest","Injectable","args","providedIn","HttpClient","Injector","Inject","ChatBoxComponent","messagingService","messageList","groupedMessageList","GROUP_MIN_RANGE_IN_MINUTES","isFullScreenMode","showSenderName","replyContent","full_screen_mode","document","documentElement","style","setProperty","show_sender_name","isLoading","ngOnInit","is_customer_view","parseInt","recipient_user_id","readAllRequest","loadMessagesRequest","loadMessages","addNewMessagesPage","forkJoin","some","addNewMessage","created_at","is_self_message","sender_display_name","loadMore","loadingSubscription","concat","unsubscribe","self","reverse","sender","ngAfterViewInit","msgDivs","last","nativeElement","focus","changes","msg","latestMsgDatetime","Date","toString","getTime","msgList","first","firstDiv_1","onNewPageAdded_1","scrollIntoView","msgsContainer","scrollBy","addEventListener","removeEventListener","groupingObj","groupByTime","groupedList","adjacentList","reply","msgInput","focusOnInputAgain","bind","onScroll","target","scrollTop","isToday","date","today","getDate","getMonth","getFullYear","isYesterday","toBeYesterday","setDate","yesterday","isWeekDay","weekAgo","getDayName","toLocaleString","weekday","ngOnDestroy","Component","selector","template","ViewChildren","ViewChild","static","Input","MY_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","MaterialImportsModule","NgModule","imports","MatDatepickerModule","MatDialogModule","FlexLayoutModule","CommonModule","MatCardModule","MatProgressSpinnerModule","MatMenuModule","MatIconModule","MatToolbarModule","MatButtonModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatSortModule","MatTableModule","MatCheckboxModule","MatAutocompleteModule","MatNativeDateModule","MatPaginatorModule","MatSidenavModule","MatListModule","MatRippleModule","BrowserModule","BrowserAnimationsModule","exports","NativeDateModule","declarations","providers","provide","DateAdapter","useClass","MomentDateAdapter","deps","MAT_DATE_LOCALE","MAT_DATE_FORMATS","useValue","MessagingModule","forRoot","ngModule","FormsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Inject, Injectable, Injector, Type} from '@angular/core';\nimport {Observable, BehaviorSubject, Subscription} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {tap, map} from 'rxjs/operators';\nimport {stringify} from 'querystring';\n\n\nexport declare interface MessagingAuthService {\n}\n\nexport declare interface MessagingPushService {\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagingService {\n\n  authService: any;\n  pushService: any;\n\n  ws: WebSocket;\n\n  private totalUnReadMsgsCountSource = new BehaviorSubject<any>(0);\n  public totalUnReadMsgsCount = this.totalUnReadMsgsCountSource.asObservable();\n\n  private unReadMsgsCountsArraySource = new BehaviorSubject<any>([]);\n  public unReadMsgsCountsArray = this.unReadMsgsCountsArraySource.asObservable();\n\n  private unreadMsgsIdsPairs = {};\n\n  private isWebSocketReconnectingSource = new BehaviorSubject<boolean>(false);\n  public isWebSocketReconnecting = this.isWebSocketReconnectingSource.asObservable();\n\n  notificationCallbackSubscription: Subscription;\n\n  constructor(private http: HttpClient, private  injector: Injector, @Inject('config') private config: any) {\n    this.configObject = config;\n    this.authService = this.injector.get<MessagingAuthService>(config.auth as Type<MessagingAuthService>);\n    if (config.push) {\n      this.pushService = this.injector.get<MessagingPushService>(config.push as Type<MessagingPushService>);\n    }\n  }\n\n  configObject: any;\n\n  initialize(config) {\n    this.configObject = config;\n  }\n\n  private defaultMsgArrivalCallback = (message) => {\n    if (stringify(message.sender_user_id) in this.unreadMsgsIdsPairs) {\n      if (this.unreadMsgsIdsPairs[stringify(message.sender_user_id)].indexOf(message.id) > -1) {\n        return;\n      }\n      this.unreadMsgsIdsPairs[stringify(message.sender_user_id)].push(message.id);\n    } else { this.unreadMsgsIdsPairs[stringify(message.sender_user_id)] = [message.id]; }\n\n    this.incrementTotalUnReadMsgsCount();\n    let unReadPairsArray: Array<any> = this.unReadMsgsCountsArraySource.getValue();\n    const matchedPairIndex = unReadPairsArray.findIndex(el => el.sender_user_id === message.sender_user_id);\n    if(matchedPairIndex !== -1)\n      unReadPairsArray[matchedPairIndex].count += 1;\n    else\n      unReadPairsArray.push({sender_user_id: message.sender_user_id, count: 1});\n\n    this.unReadMsgsCountsArraySource.next(unReadPairsArray);\n    console.log(unReadPairsArray);\n  };\n  setTotalUnReadMsgsCount(newCount) {\n    this.totalUnReadMsgsCountSource.next(newCount);\n  }\n\n  setUnReadMsgsCountsArray(pairs) {\n    this.unReadMsgsCountsArraySource.next(pairs);\n  }\n\n  incrementTotalUnReadMsgsCount() {\n    this.totalUnReadMsgsCountSource.next(this.totalUnReadMsgsCountSource.getValue()+1);\n  }\n\n  list(offset, customer_user_id=null): Observable<any> {\n    let chatUrl;\n    if(customer_user_id)\n      chatUrl = `${this.configObject.messages_url}${customer_user_id}/?limit=${this.configObject.messages_page_size}&offset=${offset}`;\n    else\n      chatUrl = `${this.configObject.messages_url}?limit=${this.configObject.messages_page_size}&offset=${offset}`;\n    return this.http.get(chatUrl).pipe(map((resp: any) => {\n      return resp.results;\n    }))\n  }\n\n  send_message(content, customer_user_id=null) {\n    this.ws.send(JSON.stringify({\n      content:content,\n      user_id: customer_user_id\n    }));\n  }\n\n  startLiveChat(onMessageCallback=null) {\n    this.initializeUnReadMessagesCounts();\n    const notificationCB = (message) => {\n      this.defaultMsgArrivalCallback(message);\n      if (onMessageCallback) {\n        onMessageCallback(message);\n      }\n    };\n    const socketCB = (event) => {\n      const message = JSON.parse(event.data).message;\n      notificationCB(message);\n    };\n\n    if(!this.ws || this.ws.readyState !== this.ws.OPEN)\n      this.initializeAutoReconnectingWebSocket(socketCB);\n    else\n      this.setWebSocketCallbacks(socketCB);\n\n    if (this.pushService) {\n      this.setNotificationCallback(notificationCB);\n    }\n\n  }\n\n  initializeAutoReconnectingWebSocket(onMessageCB) {\n    this.closeLiveChat();\n    if (!this.authService.isAuthenticated()) {\n      return;\n    }\n    const token = this.authService.getToken();\n    this.ws = new WebSocket(`${this.configObject.socket_url}?token=${token}`);\n    this.ws.onopen = () => this.isWebSocketReconnectingSource.next(false);\n    this.setWebSocketCallbacks(onMessageCB);\n  }\n\n  private setWebSocketCallbacks(onMessageCB) {\n    this.ws.onmessage = onMessageCB;\n    this.ws.onclose = () => {\n      this.isWebSocketReconnectingSource.next(true);\n      setTimeout(() => {\n        this.initializeAutoReconnectingWebSocket(onMessageCB);\n      }, 1000);\n    };\n    this.ws.onerror = (error) => {\n      if (!this.authService.isAuthenticated()) {\n        return;\n      }\n      this.ws.close();\n    };\n  }\n\n  private initializeUnReadMessagesCounts() {\n    this.http.get(`${this.configObject.messages_url}unread_messages_count/`)\n      .subscribe((countPairs: any[]) => {\n        this.setUnReadMsgsCountsArray(countPairs);\n        let totalCount = 0;\n        countPairs.forEach((pair) => {\n          totalCount += pair.count;\n        });\n        this.setTotalUnReadMsgsCount(totalCount);\n      });\n  }\n\n  setNotificationCallback(onMessageCallback) {\n    const notificationCB = (notification) => {\n      // The following commented code was commented as the ws.readystate in most times while app in background doesn't\n      // detect that socket is not active anymore! So the if statement would be true and notification handler returns\n      // without doing anything, although the socket is not doing its job! We moved avoiding duplication to the\n      // component callback itself using message id\n\n      // if(this.ws.readyState === this.ws.OPEN)\n      //   return;\n\n      const message = notification.additionalData.message_dict;\n      if(message)\n        onMessageCallback(message);\n    };\n\n    // We commented the following code and instead set directly notification callback and check inside it while the\n    // websocket is closed or not, as sometimes (in iOS) onclose is not called when the socket is down in background app\n    // mode, so isWebSocketReconnecting will not update\n\n    // let self = this;\n    // this.notificationCallbackSubscription = this.isWebSocketReconnecting.subscribe({\n    //   next(isClosed) {\n    //     if(isClosed)\n    //       self.pushService.setNotificationCallback(notificationCB);\n    //     else self.pushService.removeNotificationCallback(notificationCB);\n    //   },\n    // });\n    this.pushService.setNotificationCallback(notificationCB);\n  }\n\n  removeOnMessageListener() {\n    if (this.ws) {\n      this.ws.onmessage = this.defaultMsgArrivalCallback;\n    }\n    if (this.pushService) {\n      this.pushService.setNotificationCallback(this.defaultMsgArrivalCallback);\n    }\n  }\n\n  closeLiveChat() {\n    if(!this.ws) return;\n    this.ws.onclose = (event) => {\n      delete this.ws;\n    };\n    this.ws.close();\n  }\n\n  readAll(customer_user_id=null) {\n    let readAllUrl;\n    if(customer_user_id) readAllUrl = `${this.configObject.messages_url}${customer_user_id}/read_all/`;\n    else readAllUrl = `${this.configObject.messages_url}read_all/`;\n    return this.http.patch(readAllUrl, {})\n      .pipe(tap(event => this.setTotalUnReadMsgsCount(0)));\n  }\n\n  unreadLatest(customer_user_id) {\n    return this.http.patch(`${this.configObject.messages_url}${customer_user_id}/unread_latest/`, {});\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ViewChildren,\n  ElementRef,\n  QueryList,\n  OnInit, OnDestroy\n} from '@angular/core';\nimport {PreviewMessage} from '../models';\nimport {MessagingService} from './messaging.service';\nimport {forkJoin} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ServerMessage} from '../models';\n\n@Component({\n  selector: 'chatty-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.scss']\n})\nexport class ChatBoxComponent implements OnInit, OnDestroy {\n\n  @ViewChildren('msgDiv') msgDivs: QueryList<ElementRef>;\n  @ViewChild('msgsContainer', {static: false}) msgsContainer: ElementRef;\n\n  @Input() sender_avatar_src: string;\n  @Input() recipient_avatar_src: number;\n  @Input() sender_display_name: string;\n  @Input() recipient_display_name: string;\n  @Input() sender_user_id: string;\n  @Input() recipient_user_id: string;\n  @Input() is_customer_view: boolean;\n  @Input() height: string;\n\n  customer_user_id: number;\n\n  messageList: PreviewMessage[] = [];\n\n  groupedMessageList: PreviewMessage[][] = [];\n  latestMsgDatetime: Date;\n\n  GROUP_MIN_RANGE_IN_MINUTES = 20;\n  isFullScreenMode = false;\n  showSenderName = true;\n\n  isLoading;\n\n  replyContent = '';\n\n  @ViewChild('msgInput', {static: false}) msgInput: ElementRef;\n\n  constructor(private messagingService: MessagingService) {\n    this.isFullScreenMode = this.messagingService.configObject.full_screen_mode;\n    if (this.isFullScreenMode) {\n        document.documentElement.style\n          .setProperty('--window-width', '100%');\n    }\n\n    if ('show_sender_name' in this.messagingService.configObject) {\n      this.showSenderName = this.messagingService.configObject.show_sender_name;\n    }\n\n    // https://stackoverflow.com/a/48216423\n    this.isLoading = true;\n  }\n\n  ngOnInit(): void {\n    // customer_user_id used only if it's staff view\n    if(!this.is_customer_view) {\n      this.customer_user_id = parseInt(this.recipient_user_id);\n    }\n    const readAllRequest = this.messagingService.readAll(this.customer_user_id);\n    readAllRequest.subscribe();\n\n    const loadMessagesRequest = this.loadMessages(0);\n    loadMessagesRequest.subscribe((list: PreviewMessage[]) => {\n      this.messageList = list;\n      this.addNewMessagesPage(list);\n    });\n\n    forkJoin(readAllRequest, loadMessagesRequest).subscribe(() => this.isLoading = false);\n\n    const onMessageCallback = (message) => {\n      if (this.messageList.some(el => el.id === message.id)) {\n        return;\n      }\n      if (!this.recipient_user_id || (parseInt(message.sender_user_id) === parseInt(this.recipient_user_id))\n        || (parseInt(message.recipient_user_id) === parseInt(this.recipient_user_id))) {\n        this.addNewMessage({\n          id: message.id,\n          content: message.content,\n          created_at: message.created_at,\n          is_self_message: message.sender_user_id === this.sender_user_id,\n          ...this.showSenderName && {sender_display_name: this.sender_display_name}\n        });\n        this.messageList.push(message);\n        // TODO: read this message not all!\n        this.messagingService.readAll(this.customer_user_id)\n          .subscribe();\n      }\n    };\n    this.messagingService.startLiveChat(onMessageCallback);\n  }\n\n  loadMore() {\n    this.isLoading = true;\n    const loadingSubscription = this.loadMessages(this.messageList.length)\n      .subscribe((list: PreviewMessage[]) => {\n        this.messageList = list.concat(this.messageList);\n        this.addNewMessagesPage(list);\n        this.isLoading = false;\n        loadingSubscription.unsubscribe();\n      });\n  }\n\n  loadMessages(offset) {\n    const self = this;\n    return this.messagingService.list(offset, this.customer_user_id)\n      .pipe(map((list: ServerMessage[]) => {\n        list.reverse();\n        return list.map(message => {\n            return {\n              id: message.id,\n              content: message.content,\n              created_at: message.created_at,\n              is_self_message: message.sender === parseInt(self.sender_user_id),\n              sender_display_name: message.sender_display_name\n            };\n          }\n        );\n      }));\n  }\n\n\n  ngAfterViewInit() {\n    if (this.msgDivs && this.msgDivs.last) {\n      this.msgDivs.last.nativeElement.focus();\n    }\n    this.msgDivs.changes.subscribe(() => {\n      if (this.msgDivs && this.msgDivs.last) {\n        this.msgDivs.last.nativeElement.focus();\n      }\n    });\n  }\n\n  addNewMessage(msg) {\n    if (this.latestMsgDatetime && (new Date(msg.created_at.toString()).getTime()\n      - this.latestMsgDatetime.getTime()) / 60000 < this.GROUP_MIN_RANGE_IN_MINUTES) {\n      this.groupedMessageList[this.groupedMessageList.length - 1].push(msg);\n    } else {\n      this.groupedMessageList.push([msg]);\n    }\n    this.latestMsgDatetime = new Date(msg.created_at.toString());\n  }\n\n  addNewMessagesPage(msgList: PreviewMessage[]) {\n    if (this.msgDivs && this.msgDivs.first) {\n      const firstDiv = this.msgDivs.first;\n      const onNewPageAdded = () => {\n        firstDiv.nativeElement.scrollIntoView(true);\n        this.msgsContainer.nativeElement.scrollBy(0, -90);\n      };\n      this.msgsContainer.nativeElement.addEventListener('DOMNodeInserted', onNewPageAdded, false);\n      setTimeout(() => this.msgsContainer.nativeElement.removeEventListener('DOMNodeInserted', onNewPageAdded, false));\n    }\n\n    const groupingObj = this.groupByTime(msgList);\n    if (groupingObj) {\n      this.groupedMessageList = groupingObj.groupedList.concat(this.groupedMessageList);\n      this.latestMsgDatetime = groupingObj.latestMsgDatetime;\n    }\n\n  }\n\n  groupByTime(msgList: PreviewMessage[]) {\n    if (!msgList.length) {\n      return;\n    }\n    let groupedList = [];\n    let adjacentList = [];\n    let latestMsgDatetime = new Date(msgList[0].created_at.toString());\n    msgList.forEach((message) => {\n      if ((new Date(message.created_at.toString()).getTime() - latestMsgDatetime.getTime()) / 60000 < this.GROUP_MIN_RANGE_IN_MINUTES) {\n        adjacentList.push(message);\n        latestMsgDatetime = new Date(message.created_at.toString());\n      } else {\n        groupedList.push(adjacentList);\n        adjacentList = [message];\n        latestMsgDatetime = new Date(message.created_at.toString());\n      }\n    });\n    groupedList.push(adjacentList);\n\n    return {\n      groupedList,\n      latestMsgDatetime\n    };\n  }\n\n  reply() {\n    this.messagingService.send_message(this.replyContent, this.recipient_user_id);\n    this.replyContent = '';\n    this.msgInput.nativeElement.addEventListener('focusout', this.focusOnInputAgain.bind(this));\n  }\n\n  focusOnInputAgain(event) {\n    setTimeout(() => {\n      this.msgInput.nativeElement.focus();\n      this.msgInput.nativeElement.removeEventListener('focusout', this.focusOnInputAgain.bind(this));\n    });\n  }\n\n  onScroll(event: any) {\n    if (event.target.scrollTop === 0) {\n      this.loadMore();\n    }\n  }\n\n  isToday(date) {\n    date = new Date(date.toString());\n    const today = new Date();\n    return date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear();\n  }\n\n  isYesterday(date) {\n    date = new Date(date.toString());\n    let toBeYesterday = new Date();\n    toBeYesterday.setDate(toBeYesterday.getDate() - 1);\n    const yesterday = toBeYesterday;\n    return date.getDate() === yesterday.getDate() &&\n      date.getMonth() === yesterday.getMonth() &&\n      date.getFullYear() === yesterday.getFullYear();\n  }\n\n  isWeekDay(date) {\n    if (this.isToday(date) || this.isYesterday(date)) {\n      return false;\n    }\n    let weekAgo = new Date();\n    weekAgo.setDate(weekAgo.getDate() - 7);\n    return new Date(date.toString()) > weekAgo;\n  }\n\n  getDayName(date) {\n    return new Date(date.toString()).toLocaleString('en-us', {weekday: 'short' });\n  }\n\n  ngOnDestroy() {\n    this.messagingService.removeOnMessageListener();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatDialogModule, MatListModule, NativeDateModule} from '@angular/material';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n\nimport {MatRippleModule} from '@angular/material/core';\n\nimport {\n  MatCardModule,\n  MatProgressSpinnerModule,\n  MatMenuModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatSortModule,\n  MatTableModule,\n  MatCheckboxModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatSidenavModule,\n} from '@angular/material';\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  imports: [\n    MatDatepickerModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    CommonModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatSidenavModule,\n    MatListModule,\n    MatRippleModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatDatepickerModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatSidenavModule,\n    MatListModule,\n    MatRippleModule,\n    MatDatepickerModule,\n    NativeDateModule\n  ],\n  declarations: [],\n\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ]\n\n})\nexport class MaterialImportsModule {}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ChatBoxComponent} from \"./chat-box/chat-box.component\";\nimport {MessagingService} from \"./chat-box/messaging.service\";\nimport {BrowserModule} from '@angular/platform-browser';\nimport {MaterialImportsModule} from \"./material-imports/material-imports.module\";\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [ChatBoxComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    MaterialImportsModule,\n    FormsModule\n  ],\n  exports: [ChatBoxComponent],\n  providers: []\n})\nexport class MessagingModule {\n  static forRoot(config: any): ModuleWithProviders {\n    return {\n      ngModule: MessagingModule,\n      providers: [MessagingService, {provide: 'config', useValue: config}]\n    };\n  }\n}\n"]}