{"version":3,"file":"chatty-frontend.js","sources":["ng://chatty-frontend/lib/chat-box/messaging.service.ts","ng://chatty-frontend/lib/chat-box/chat-box.component.ts","ng://chatty-frontend/lib/material-imports/material-imports.module.ts","ng://chatty-frontend/lib/messaging.module.ts"],"sourcesContent":["import {Inject, Injectable, Injector, Type} from '@angular/core';\nimport {Observable, BehaviorSubject, Subscription} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {tap, map} from 'rxjs/operators';\nimport {stringify} from 'querystring';\n\n\nexport declare interface MessagingAuthService {\n}\n\nexport declare interface MessagingPushService {\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessagingService {\n\n  authService: any;\n  pushService: any;\n\n  ws: WebSocket;\n\n  private totalUnReadMsgsCountSource = new BehaviorSubject<any>(0);\n  public totalUnReadMsgsCount = this.totalUnReadMsgsCountSource.asObservable();\n\n  private unReadMsgsCountsArraySource = new BehaviorSubject<any>([]);\n  public unReadMsgsCountsArray = this.unReadMsgsCountsArraySource.asObservable();\n\n  private unreadMsgsIdsPairs = {};\n\n  private isWebSocketReconnectingSource = new BehaviorSubject<boolean>(false);\n  public isWebSocketReconnecting = this.isWebSocketReconnectingSource.asObservable();\n\n  notificationCallbackSubscription: Subscription;\n\n  constructor(private http: HttpClient, private  injector: Injector, @Inject('config') private config: any) {\n    this.configObject = config;\n    this.authService = this.injector.get<MessagingAuthService>(config.auth as Type<MessagingAuthService>);\n    if (config.push) {\n      this.pushService = this.injector.get<MessagingPushService>(config.push as Type<MessagingPushService>);\n    }\n  }\n\n  configObject: any;\n\n  initialize(config) {\n    this.configObject = config;\n  }\n\n  private defaultMsgArrivalCallback = (message) => {\n    if (stringify(message.sender_user_id) in this.unreadMsgsIdsPairs) {\n      if (this.unreadMsgsIdsPairs[stringify(message.sender_user_id)].indexOf(message.id) > -1) {\n        return;\n      }\n      this.unreadMsgsIdsPairs[stringify(message.sender_user_id)].push(message.id);\n    } else { this.unreadMsgsIdsPairs[stringify(message.sender_user_id)] = [message.id]; }\n\n    this.incrementTotalUnReadMsgsCount();\n    let unReadPairsArray: Array<any> = this.unReadMsgsCountsArraySource.getValue();\n    const matchedPairIndex = unReadPairsArray.findIndex(el => el.sender_user_id === message.sender_user_id);\n    if(matchedPairIndex !== -1)\n      unReadPairsArray[matchedPairIndex].count += 1;\n    else\n      unReadPairsArray.push({sender_user_id: message.sender_user_id, count: 1});\n\n    this.unReadMsgsCountsArraySource.next(unReadPairsArray);\n    console.log(unReadPairsArray);\n  };\n  setTotalUnReadMsgsCount(newCount) {\n    this.totalUnReadMsgsCountSource.next(newCount);\n  }\n\n  setUnReadMsgsCountsArray(pairs) {\n    this.unReadMsgsCountsArraySource.next(pairs);\n  }\n\n  incrementTotalUnReadMsgsCount() {\n    this.totalUnReadMsgsCountSource.next(this.totalUnReadMsgsCountSource.getValue()+1);\n  }\n\n  list(offset, customer_user_id=null): Observable<any> {\n    let chatUrl;\n    if(customer_user_id)\n      chatUrl = `${this.configObject.messages_url}${customer_user_id}/?limit=${this.configObject.messages_page_size}&offset=${offset}`;\n    else\n      chatUrl = `${this.configObject.messages_url}?limit=${this.configObject.messages_page_size}&offset=${offset}`;\n    return this.http.get(chatUrl).pipe(map((resp: any) => {\n      return resp.results;\n    }))\n  }\n\n  send_message(content, customer_user_id=null) {\n    this.ws.send(JSON.stringify({\n      content:content,\n      user_id: customer_user_id\n    }));\n  }\n\n  startLiveChat(onMessageCallback=null) {\n    this.initializeUnReadMessagesCounts();\n    const notificationCB = (message) => {\n      this.defaultMsgArrivalCallback(message);\n      if (onMessageCallback) {\n        onMessageCallback(message);\n      }\n    };\n    const socketCB = (event) => {\n      const message = JSON.parse(event.data).message;\n      notificationCB(message);\n    };\n\n    if(!this.ws || this.ws.readyState !== this.ws.OPEN)\n      this.initializeAutoReconnectingWebSocket(socketCB);\n    else\n      this.setWebSocketCallbacks(socketCB);\n\n    if (this.pushService) {\n      this.setNotificationCallback(notificationCB);\n    }\n\n  }\n\n  initializeAutoReconnectingWebSocket(onMessageCB) {\n    this.closeLiveChat();\n    if (!this.authService.isAuthenticated()) {\n      return;\n    }\n    const token = this.authService.getToken();\n    this.ws = new WebSocket(`${this.configObject.socket_url}?token=${token}`);\n    this.ws.onopen = () => this.isWebSocketReconnectingSource.next(false);\n    this.setWebSocketCallbacks(onMessageCB);\n  }\n\n  private setWebSocketCallbacks(onMessageCB) {\n    this.ws.onmessage = onMessageCB;\n    this.ws.onclose = () => {\n      this.isWebSocketReconnectingSource.next(true);\n      setTimeout(() => {\n        this.initializeAutoReconnectingWebSocket(onMessageCB);\n      }, 1000);\n    };\n    this.ws.onerror = (error) => {\n      if (!this.authService.isAuthenticated()) {\n        return;\n      }\n      this.ws.close();\n    };\n  }\n\n  private initializeUnReadMessagesCounts() {\n    this.http.get(`${this.configObject.messages_url}unread_messages_count/`)\n      .subscribe((countPairs: any[]) => {\n        this.setUnReadMsgsCountsArray(countPairs);\n        let totalCount = 0;\n        countPairs.forEach((pair) => {\n          totalCount += pair.count;\n        });\n        this.setTotalUnReadMsgsCount(totalCount);\n      });\n  }\n\n  setNotificationCallback(onMessageCallback) {\n    const notificationCB = (notification) => {\n      // The following commented code was commented as the ws.readystate in most times while app in background doesn't\n      // detect that socket is not active anymore! So the if statement would be true and notification handler returns\n      // without doing anything, although the socket is not doing its job! We moved avoiding duplication to the\n      // component callback itself using message id\n\n      // if(this.ws.readyState === this.ws.OPEN)\n      //   return;\n\n      const message = notification.additionalData.message_dict;\n      if(message)\n        onMessageCallback(message);\n    };\n\n    // We commented the following code and instead set directly notification callback and check inside it while the\n    // websocket is closed or not, as sometimes (in iOS) onclose is not called when the socket is down in background app\n    // mode, so isWebSocketReconnecting will not update\n\n    // let self = this;\n    // this.notificationCallbackSubscription = this.isWebSocketReconnecting.subscribe({\n    //   next(isClosed) {\n    //     if(isClosed)\n    //       self.pushService.setNotificationCallback(notificationCB);\n    //     else self.pushService.removeNotificationCallback(notificationCB);\n    //   },\n    // });\n    this.pushService.setNotificationCallback(notificationCB);\n  }\n\n  removeOnMessageListener() {\n    if (this.ws) {\n      this.ws.onmessage = this.defaultMsgArrivalCallback;\n    }\n    if (this.pushService) {\n      this.pushService.setNotificationCallback(this.defaultMsgArrivalCallback);\n    }\n  }\n\n  closeLiveChat() {\n    if(!this.ws) return;\n    this.ws.onclose = (event) => {\n      delete this.ws;\n    };\n    this.ws.close();\n  }\n\n  readAll(customer_user_id=null) {\n    let readAllUrl;\n    if(customer_user_id) readAllUrl = `${this.configObject.messages_url}${customer_user_id}/read_all/`;\n    else readAllUrl = `${this.configObject.messages_url}read_all/`;\n    return this.http.patch(readAllUrl, {})\n      .pipe(tap(event => this.setTotalUnReadMsgsCount(0)));\n  }\n\n  unreadLatest(customer_user_id) {\n    return this.http.patch(`${this.configObject.messages_url}${customer_user_id}/unread_latest/`, {});\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ViewChildren,\n  ElementRef,\n  QueryList,\n  OnInit, OnDestroy\n} from '@angular/core';\nimport {PreviewMessage} from '../models';\nimport {MessagingService} from './messaging.service';\nimport {forkJoin} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {ServerMessage} from '../models';\n\n@Component({\n  selector: 'chatty-chat-box',\n  templateUrl: './chat-box.component.html',\n  styleUrls: ['./chat-box.component.scss']\n})\nexport class ChatBoxComponent implements OnInit, OnDestroy {\n\n  @ViewChildren('msgDiv') msgDivs: QueryList<ElementRef>;\n  @ViewChild('msgsContainer', {static: false}) msgsContainer: ElementRef;\n\n  @Input() sender_avatar_src: string;\n  @Input() recipient_avatar_src: number;\n  @Input() sender_display_name: string;\n  @Input() recipient_display_name: string;\n  @Input() sender_user_id: string;\n  @Input() recipient_user_id: string;\n  @Input() is_customer_view: boolean;\n  @Input() height: string;\n\n  customer_user_id: number;\n\n  messageList: PreviewMessage[] = [];\n\n  groupedMessageList: PreviewMessage[][] = [];\n  latestMsgDatetime: Date;\n\n  GROUP_MIN_RANGE_IN_MINUTES = 20;\n  isFullScreenMode = false;\n  showSenderName = true;\n\n  isLoading;\n\n  replyContent = '';\n\n  @ViewChild('msgInput', {static: false}) msgInput: ElementRef;\n\n  constructor(private messagingService: MessagingService) {\n    this.isFullScreenMode = this.messagingService.configObject.full_screen_mode;\n    if (this.isFullScreenMode) {\n        document.documentElement.style\n          .setProperty('--window-width', '100%');\n    }\n\n    if ('show_sender_name' in this.messagingService.configObject) {\n      this.showSenderName = this.messagingService.configObject.show_sender_name;\n    }\n\n    // https://stackoverflow.com/a/48216423\n    this.isLoading = true;\n  }\n\n  ngOnInit(): void {\n    // customer_user_id used only if it's staff view\n    if(!this.is_customer_view) {\n      this.customer_user_id = parseInt(this.recipient_user_id);\n    }\n    const readAllRequest = this.messagingService.readAll(this.customer_user_id);\n    readAllRequest.subscribe();\n\n    const loadMessagesRequest = this.loadMessages(0);\n    loadMessagesRequest.subscribe((list: PreviewMessage[]) => {\n      this.messageList = list;\n      this.addNewMessagesPage(list);\n    });\n\n    forkJoin(readAllRequest, loadMessagesRequest).subscribe(() => this.isLoading = false);\n\n    const onMessageCallback = (message) => {\n      if (this.messageList.some(el => el.id === message.id)) {\n        return;\n      }\n      if (!this.recipient_user_id || (parseInt(message.sender_user_id) === parseInt(this.recipient_user_id))\n        || (parseInt(message.recipient_user_id) === parseInt(this.recipient_user_id))) {\n        this.addNewMessage({\n          id: message.id,\n          content: message.content,\n          created_at: message.created_at,\n          is_self_message: message.sender_user_id === this.sender_user_id,\n          ...this.showSenderName && {sender_display_name: this.sender_display_name}\n        });\n        this.messageList.push(message);\n        // TODO: read this message not all!\n        this.messagingService.readAll(this.customer_user_id)\n          .subscribe();\n      }\n    };\n    this.messagingService.startLiveChat(onMessageCallback);\n  }\n\n  loadMore() {\n    this.isLoading = true;\n    const loadingSubscription = this.loadMessages(this.messageList.length)\n      .subscribe((list: PreviewMessage[]) => {\n        this.messageList = list.concat(this.messageList);\n        this.addNewMessagesPage(list);\n        this.isLoading = false;\n        loadingSubscription.unsubscribe();\n      });\n  }\n\n  loadMessages(offset) {\n    const self = this;\n    return this.messagingService.list(offset, this.customer_user_id)\n      .pipe(map((list: ServerMessage[]) => {\n        list.reverse();\n        return list.map(message => {\n            return {\n              id: message.id,\n              content: message.content,\n              created_at: message.created_at,\n              is_self_message: message.sender === parseInt(self.sender_user_id),\n              sender_display_name: message.sender_display_name\n            };\n          }\n        );\n      }));\n  }\n\n\n  ngAfterViewInit() {\n    if (this.msgDivs && this.msgDivs.last) {\n      this.msgDivs.last.nativeElement.focus();\n    }\n    this.msgDivs.changes.subscribe(() => {\n      if (this.msgDivs && this.msgDivs.last) {\n        this.msgDivs.last.nativeElement.focus();\n      }\n    });\n  }\n\n  addNewMessage(msg) {\n    if (this.latestMsgDatetime && (new Date(msg.created_at.toString()).getTime()\n      - this.latestMsgDatetime.getTime()) / 60000 < this.GROUP_MIN_RANGE_IN_MINUTES) {\n      this.groupedMessageList[this.groupedMessageList.length - 1].push(msg);\n    } else {\n      this.groupedMessageList.push([msg]);\n    }\n    this.latestMsgDatetime = new Date(msg.created_at.toString());\n  }\n\n  addNewMessagesPage(msgList: PreviewMessage[]) {\n    if (this.msgDivs && this.msgDivs.first) {\n      const firstDiv = this.msgDivs.first;\n      const onNewPageAdded = () => {\n        firstDiv.nativeElement.scrollIntoView(true);\n        this.msgsContainer.nativeElement.scrollBy(0, -90);\n      };\n      this.msgsContainer.nativeElement.addEventListener('DOMNodeInserted', onNewPageAdded, false);\n      setTimeout(() => this.msgsContainer.nativeElement.removeEventListener('DOMNodeInserted', onNewPageAdded, false));\n    }\n\n    const groupingObj = this.groupByTime(msgList);\n    if (groupingObj) {\n      this.groupedMessageList = groupingObj.groupedList.concat(this.groupedMessageList);\n      this.latestMsgDatetime = groupingObj.latestMsgDatetime;\n    }\n\n  }\n\n  groupByTime(msgList: PreviewMessage[]) {\n    if (!msgList.length) {\n      return;\n    }\n    let groupedList = [];\n    let adjacentList = [];\n    let latestMsgDatetime = new Date(msgList[0].created_at.toString());\n    msgList.forEach((message) => {\n      if ((new Date(message.created_at.toString()).getTime() - latestMsgDatetime.getTime()) / 60000 < this.GROUP_MIN_RANGE_IN_MINUTES) {\n        adjacentList.push(message);\n        latestMsgDatetime = new Date(message.created_at.toString());\n      } else {\n        groupedList.push(adjacentList);\n        adjacentList = [message];\n        latestMsgDatetime = new Date(message.created_at.toString());\n      }\n    });\n    groupedList.push(adjacentList);\n\n    return {\n      groupedList,\n      latestMsgDatetime\n    };\n  }\n\n  reply() {\n    this.messagingService.send_message(this.replyContent, this.recipient_user_id);\n    this.replyContent = '';\n    this.msgInput.nativeElement.addEventListener('focusout', this.focusOnInputAgain.bind(this));\n  }\n\n  focusOnInputAgain(event) {\n    setTimeout(() => {\n      this.msgInput.nativeElement.focus();\n      this.msgInput.nativeElement.removeEventListener('focusout', this.focusOnInputAgain.bind(this));\n    });\n  }\n\n  onScroll(event: any) {\n    if (event.target.scrollTop === 0) {\n      this.loadMore();\n    }\n  }\n\n  isToday(date) {\n    date = new Date(date.toString());\n    const today = new Date();\n    return date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear();\n  }\n\n  isYesterday(date) {\n    date = new Date(date.toString());\n    let toBeYesterday = new Date();\n    toBeYesterday.setDate(toBeYesterday.getDate() - 1);\n    const yesterday = toBeYesterday;\n    return date.getDate() === yesterday.getDate() &&\n      date.getMonth() === yesterday.getMonth() &&\n      date.getFullYear() === yesterday.getFullYear();\n  }\n\n  isWeekDay(date) {\n    if (this.isToday(date) || this.isYesterday(date)) {\n      return false;\n    }\n    let weekAgo = new Date();\n    weekAgo.setDate(weekAgo.getDate() - 7);\n    return new Date(date.toString()) > weekAgo;\n  }\n\n  getDayName(date) {\n    return new Date(date.toString()).toLocaleString('en-us', {weekday: 'short' });\n  }\n\n  ngOnDestroy() {\n    this.messagingService.removeOnMessageListener();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {MatDialogModule, MatListModule, NativeDateModule} from '@angular/material';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n\nimport {MatRippleModule} from '@angular/material/core';\n\nimport {\n  MatCardModule,\n  MatProgressSpinnerModule,\n  MatMenuModule,\n  MatIconModule,\n  MatToolbarModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatInputModule,\n  MatSelectModule,\n  MatSortModule,\n  MatTableModule,\n  MatCheckboxModule,\n  MatAutocompleteModule,\n  MatDatepickerModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatSidenavModule,\n} from '@angular/material';\nimport {BrowserModule} from \"@angular/platform-browser\";\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n@NgModule({\n  imports: [\n    MatDatepickerModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    CommonModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatSidenavModule,\n    MatListModule,\n    MatRippleModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatDatepickerModule,\n    MatDialogModule,\n    FlexLayoutModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatMenuModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSortModule,\n    MatTableModule,\n    MatCheckboxModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatSidenavModule,\n    MatListModule,\n    MatRippleModule,\n    MatDatepickerModule,\n    NativeDateModule\n  ],\n  declarations: [],\n\n  providers: [\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ]\n\n})\nexport class MaterialImportsModule {}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ChatBoxComponent} from \"./chat-box/chat-box.component\";\nimport {MessagingService} from \"./chat-box/messaging.service\";\nimport {BrowserModule} from '@angular/platform-browser';\nimport {MaterialImportsModule} from \"./material-imports/material-imports.module\";\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  declarations: [ChatBoxComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    MaterialImportsModule,\n    FormsModule\n  ],\n  exports: [ChatBoxComponent],\n  providers: []\n})\nexport class MessagingModule {\n  static forRoot(config: any): ModuleWithProviders {\n    return {\n      ngModule: MessagingModule,\n      providers: [MessagingService, {provide: 'config', useValue: config}]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}